# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tendermint/abci/types.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from tendermint.crypto import proof_pb2 as tendermint_dot_crypto_dot_proof__pb2
from tendermint.types import types_pb2 as tendermint_dot_types_dot_types__pb2
from tendermint.crypto import keys_pb2 as tendermint_dot_crypto_dot_keys__pb2
from tendermint.types import params_pb2 as tendermint_dot_types_dot_params__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from gogoproto import gogo_pb2 as gogoproto_dot_gogo__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1btendermint/abci/types.proto\x12\x0ftendermint.abci\x1a\x1dtendermint/crypto/proof.proto\x1a\x1ctendermint/types/types.proto\x1a\x1ctendermint/crypto/keys.proto\x1a\x1dtendermint/types/params.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x14gogoproto/gogo.proto\"\x91\x08\n\x07Request\x12\x32\n\x04\x65\x63ho\x18\x01 \x01(\x0b\x32\x1c.tendermint.abci.RequestEchoH\x00R\x04\x65\x63ho\x12\x35\n\x05\x66lush\x18\x02 \x01(\x0b\x32\x1d.tendermint.abci.RequestFlushH\x00R\x05\x66lush\x12\x32\n\x04info\x18\x03 \x01(\x0b\x32\x1c.tendermint.abci.RequestInfoH\x00R\x04info\x12\x42\n\nset_option\x18\x04 \x01(\x0b\x32!.tendermint.abci.RequestSetOptionH\x00R\tsetOption\x12\x42\n\ninit_chain\x18\x05 \x01(\x0b\x32!.tendermint.abci.RequestInitChainH\x00R\tinitChain\x12\x35\n\x05query\x18\x06 \x01(\x0b\x32\x1d.tendermint.abci.RequestQueryH\x00R\x05query\x12\x45\n\x0b\x62\x65gin_block\x18\x07 \x01(\x0b\x32\".tendermint.abci.RequestBeginBlockH\x00R\nbeginBlock\x12<\n\x08\x63heck_tx\x18\x08 \x01(\x0b\x32\x1f.tendermint.abci.RequestCheckTxH\x00R\x07\x63heckTx\x12\x42\n\ndeliver_tx\x18\t \x01(\x0b\x32!.tendermint.abci.RequestDeliverTxH\x00R\tdeliverTx\x12?\n\tend_block\x18\n \x01(\x0b\x32 .tendermint.abci.RequestEndBlockH\x00R\x08\x65ndBlock\x12\x38\n\x06\x63ommit\x18\x0b \x01(\x0b\x32\x1e.tendermint.abci.RequestCommitH\x00R\x06\x63ommit\x12N\n\x0elist_snapshots\x18\x0c \x01(\x0b\x32%.tendermint.abci.RequestListSnapshotsH\x00R\rlistSnapshots\x12N\n\x0eoffer_snapshot\x18\r \x01(\x0b\x32%.tendermint.abci.RequestOfferSnapshotH\x00R\rofferSnapshot\x12[\n\x13load_snapshot_chunk\x18\x0e \x01(\x0b\x32).tendermint.abci.RequestLoadSnapshotChunkH\x00R\x11loadSnapshotChunk\x12^\n\x14\x61pply_snapshot_chunk\x18\x0f \x01(\x0b\x32*.tendermint.abci.RequestApplySnapshotChunkH\x00R\x12\x61pplySnapshotChunkB\x07\n\x05value\"\'\n\x0bRequestEcho\x12\x18\n\x07message\x18\x01 \x01(\tR\x07message\"\x0e\n\x0cRequestFlush\"m\n\x0bRequestInfo\x12\x18\n\x07version\x18\x01 \x01(\tR\x07version\x12#\n\rblock_version\x18\x02 \x01(\x04R\x0c\x62lockVersion\x12\x1f\n\x0bp2p_version\x18\x03 \x01(\x04R\np2pVersion\":\n\x10RequestSetOption\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n\x05value\x18\x02 \x01(\tR\x05value\"\xcb\x02\n\x10RequestInitChain\x12\x38\n\x04time\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x08\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\x04time\x12\x19\n\x08\x63hain_id\x18\x02 \x01(\tR\x07\x63hainId\x12K\n\x10\x63onsensus_params\x18\x03 \x01(\x0b\x32 .tendermint.abci.ConsensusParamsR\x0f\x63onsensusParams\x12\x46\n\nvalidators\x18\x04 \x03(\x0b\x32 .tendermint.abci.ValidatorUpdateB\x04\xc8\xde\x1f\x00R\nvalidators\x12&\n\x0f\x61pp_state_bytes\x18\x05 \x01(\x0cR\rappStateBytes\x12%\n\x0einitial_height\x18\x06 \x01(\x03R\rinitialHeight\"d\n\x0cRequestQuery\x12\x12\n\x04\x64\x61ta\x18\x01 \x01(\x0cR\x04\x64\x61ta\x12\x12\n\x04path\x18\x02 \x01(\tR\x04path\x12\x16\n\x06height\x18\x03 \x01(\x03R\x06height\x12\x14\n\x05prove\x18\x04 \x01(\x08R\x05prove\"\x84\x02\n\x11RequestBeginBlock\x12\x12\n\x04hash\x18\x01 \x01(\x0cR\x04hash\x12\x36\n\x06header\x18\x02 \x01(\x0b\x32\x18.tendermint.types.HeaderB\x04\xc8\xde\x1f\x00R\x06header\x12O\n\x10last_commit_info\x18\x03 \x01(\x0b\x32\x1f.tendermint.abci.LastCommitInfoB\x04\xc8\xde\x1f\x00R\x0elastCommitInfo\x12R\n\x14\x62yzantine_validators\x18\x04 \x03(\x0b\x32\x19.tendermint.abci.EvidenceB\x04\xc8\xde\x1f\x00R\x13\x62yzantineValidators\"R\n\x0eRequestCheckTx\x12\x0e\n\x02tx\x18\x01 \x01(\x0cR\x02tx\x12\x30\n\x04type\x18\x02 \x01(\x0e\x32\x1c.tendermint.abci.CheckTxTypeR\x04type\"\"\n\x10RequestDeliverTx\x12\x0e\n\x02tx\x18\x01 \x01(\x0cR\x02tx\")\n\x0fRequestEndBlock\x12\x16\n\x06height\x18\x01 \x01(\x03R\x06height\"\x0f\n\rRequestCommit\"\x16\n\x14RequestListSnapshots\"h\n\x14RequestOfferSnapshot\x12\x35\n\x08snapshot\x18\x01 \x01(\x0b\x32\x19.tendermint.abci.SnapshotR\x08snapshot\x12\x19\n\x08\x61pp_hash\x18\x02 \x01(\x0cR\x07\x61ppHash\"`\n\x18RequestLoadSnapshotChunk\x12\x16\n\x06height\x18\x01 \x01(\x04R\x06height\x12\x16\n\x06\x66ormat\x18\x02 \x01(\rR\x06\x66ormat\x12\x14\n\x05\x63hunk\x18\x03 \x01(\rR\x05\x63hunk\"_\n\x19RequestApplySnapshotChunk\x12\x14\n\x05index\x18\x01 \x01(\rR\x05index\x12\x14\n\x05\x63hunk\x18\x02 \x01(\x0cR\x05\x63hunk\x12\x16\n\x06sender\x18\x03 \x01(\tR\x06sender\"\xe5\x08\n\x08Response\x12\x42\n\texception\x18\x01 \x01(\x0b\x32\".tendermint.abci.ResponseExceptionH\x00R\texception\x12\x33\n\x04\x65\x63ho\x18\x02 \x01(\x0b\x32\x1d.tendermint.abci.ResponseEchoH\x00R\x04\x65\x63ho\x12\x36\n\x05\x66lush\x18\x03 \x01(\x0b\x32\x1e.tendermint.abci.ResponseFlushH\x00R\x05\x66lush\x12\x33\n\x04info\x18\x04 \x01(\x0b\x32\x1d.tendermint.abci.ResponseInfoH\x00R\x04info\x12\x43\n\nset_option\x18\x05 \x01(\x0b\x32\".tendermint.abci.ResponseSetOptionH\x00R\tsetOption\x12\x43\n\ninit_chain\x18\x06 \x01(\x0b\x32\".tendermint.abci.ResponseInitChainH\x00R\tinitChain\x12\x36\n\x05query\x18\x07 \x01(\x0b\x32\x1e.tendermint.abci.ResponseQueryH\x00R\x05query\x12\x46\n\x0b\x62\x65gin_block\x18\x08 \x01(\x0b\x32#.tendermint.abci.ResponseBeginBlockH\x00R\nbeginBlock\x12=\n\x08\x63heck_tx\x18\t \x01(\x0b\x32 .tendermint.abci.ResponseCheckTxH\x00R\x07\x63heckTx\x12\x43\n\ndeliver_tx\x18\n \x01(\x0b\x32\".tendermint.abci.ResponseDeliverTxH\x00R\tdeliverTx\x12@\n\tend_block\x18\x0b \x01(\x0b\x32!.tendermint.abci.ResponseEndBlockH\x00R\x08\x65ndBlock\x12\x39\n\x06\x63ommit\x18\x0c \x01(\x0b\x32\x1f.tendermint.abci.ResponseCommitH\x00R\x06\x63ommit\x12O\n\x0elist_snapshots\x18\r \x01(\x0b\x32&.tendermint.abci.ResponseListSnapshotsH\x00R\rlistSnapshots\x12O\n\x0eoffer_snapshot\x18\x0e \x01(\x0b\x32&.tendermint.abci.ResponseOfferSnapshotH\x00R\rofferSnapshot\x12\\\n\x13load_snapshot_chunk\x18\x0f \x01(\x0b\x32*.tendermint.abci.ResponseLoadSnapshotChunkH\x00R\x11loadSnapshotChunk\x12_\n\x14\x61pply_snapshot_chunk\x18\x10 \x01(\x0b\x32+.tendermint.abci.ResponseApplySnapshotChunkH\x00R\x12\x61pplySnapshotChunkB\x07\n\x05value\")\n\x11ResponseException\x12\x14\n\x05\x65rror\x18\x01 \x01(\tR\x05\x65rror\"(\n\x0cResponseEcho\x12\x18\n\x07message\x18\x01 \x01(\tR\x07message\"\x0f\n\rResponseFlush\"\xb8\x01\n\x0cResponseInfo\x12\x12\n\x04\x64\x61ta\x18\x01 \x01(\tR\x04\x64\x61ta\x12\x18\n\x07version\x18\x02 \x01(\tR\x07version\x12\x1f\n\x0b\x61pp_version\x18\x03 \x01(\x04R\nappVersion\x12*\n\x11last_block_height\x18\x04 \x01(\x03R\x0flastBlockHeight\x12-\n\x13last_block_app_hash\x18\x05 \x01(\x0cR\x10lastBlockAppHash\"M\n\x11ResponseSetOption\x12\x12\n\x04\x63ode\x18\x01 \x01(\rR\x04\x63ode\x12\x10\n\x03log\x18\x03 \x01(\tR\x03log\x12\x12\n\x04info\x18\x04 \x01(\tR\x04info\"\xc3\x01\n\x11ResponseInitChain\x12K\n\x10\x63onsensus_params\x18\x01 \x01(\x0b\x32 .tendermint.abci.ConsensusParamsR\x0f\x63onsensusParams\x12\x46\n\nvalidators\x18\x02 \x03(\x0b\x32 .tendermint.abci.ValidatorUpdateB\x04\xc8\xde\x1f\x00R\nvalidators\x12\x19\n\x08\x61pp_hash\x18\x03 \x01(\x0cR\x07\x61ppHash\"\xf7\x01\n\rResponseQuery\x12\x12\n\x04\x63ode\x18\x01 \x01(\rR\x04\x63ode\x12\x10\n\x03log\x18\x03 \x01(\tR\x03log\x12\x12\n\x04info\x18\x04 \x01(\tR\x04info\x12\x14\n\x05index\x18\x05 \x01(\x03R\x05index\x12\x10\n\x03key\x18\x06 \x01(\x0cR\x03key\x12\x14\n\x05value\x18\x07 \x01(\x0cR\x05value\x12\x38\n\tproof_ops\x18\x08 \x01(\x0b\x32\x1b.tendermint.crypto.ProofOpsR\x08proofOps\x12\x16\n\x06height\x18\t \x01(\x03R\x06height\x12\x1c\n\tcodespace\x18\n \x01(\tR\tcodespace\"^\n\x12ResponseBeginBlock\x12H\n\x06\x65vents\x18\x01 \x03(\x0b\x32\x16.tendermint.abci.EventB\x18\xc8\xde\x1f\x00\xea\xde\x1f\x10\x65vents,omitemptyR\x06\x65vents\"\x83\x02\n\x0fResponseCheckTx\x12\x12\n\x04\x63ode\x18\x01 \x01(\rR\x04\x63ode\x12\x12\n\x04\x64\x61ta\x18\x02 \x01(\x0cR\x04\x64\x61ta\x12\x10\n\x03log\x18\x03 \x01(\tR\x03log\x12\x12\n\x04info\x18\x04 \x01(\tR\x04info\x12\x1e\n\ngas_wanted\x18\x05 \x01(\x03R\ngas_wanted\x12\x1a\n\x08gas_used\x18\x06 \x01(\x03R\x08gas_used\x12H\n\x06\x65vents\x18\x07 \x03(\x0b\x32\x16.tendermint.abci.EventB\x18\xc8\xde\x1f\x00\xea\xde\x1f\x10\x65vents,omitemptyR\x06\x65vents\x12\x1c\n\tcodespace\x18\x08 \x01(\tR\tcodespace\"\x85\x02\n\x11ResponseDeliverTx\x12\x12\n\x04\x63ode\x18\x01 \x01(\rR\x04\x63ode\x12\x12\n\x04\x64\x61ta\x18\x02 \x01(\x0cR\x04\x64\x61ta\x12\x10\n\x03log\x18\x03 \x01(\tR\x03log\x12\x12\n\x04info\x18\x04 \x01(\tR\x04info\x12\x1e\n\ngas_wanted\x18\x05 \x01(\x03R\ngas_wanted\x12\x1a\n\x08gas_used\x18\x06 \x01(\x03R\x08gas_used\x12H\n\x06\x65vents\x18\x07 \x03(\x0b\x32\x16.tendermint.abci.EventB\x18\xc8\xde\x1f\x00\xea\xde\x1f\x10\x65vents,omitemptyR\x06\x65vents\x12\x1c\n\tcodespace\x18\x08 \x01(\tR\tcodespace\"\x8b\x02\n\x10ResponseEndBlock\x12S\n\x11validator_updates\x18\x01 \x03(\x0b\x32 .tendermint.abci.ValidatorUpdateB\x04\xc8\xde\x1f\x00R\x10validatorUpdates\x12X\n\x17\x63onsensus_param_updates\x18\x02 \x01(\x0b\x32 .tendermint.abci.ConsensusParamsR\x15\x63onsensusParamUpdates\x12H\n\x06\x65vents\x18\x03 \x03(\x0b\x32\x16.tendermint.abci.EventB\x18\xc8\xde\x1f\x00\xea\xde\x1f\x10\x65vents,omitemptyR\x06\x65vents\"I\n\x0eResponseCommit\x12\x12\n\x04\x64\x61ta\x18\x02 \x01(\x0cR\x04\x64\x61ta\x12#\n\rretain_height\x18\x03 \x01(\x03R\x0cretainHeight\"P\n\x15ResponseListSnapshots\x12\x37\n\tsnapshots\x18\x01 \x03(\x0b\x32\x19.tendermint.abci.SnapshotR\tsnapshots\"\xbe\x01\n\x15ResponseOfferSnapshot\x12\x45\n\x06result\x18\x01 \x01(\x0e\x32-.tendermint.abci.ResponseOfferSnapshot.ResultR\x06result\"^\n\x06Result\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06\x41\x43\x43\x45PT\x10\x01\x12\t\n\x05\x41\x42ORT\x10\x02\x12\n\n\x06REJECT\x10\x03\x12\x11\n\rREJECT_FORMAT\x10\x04\x12\x11\n\rREJECT_SENDER\x10\x05\"1\n\x19ResponseLoadSnapshotChunk\x12\x14\n\x05\x63hunk\x18\x01 \x01(\x0cR\x05\x63hunk\"\x98\x02\n\x1aResponseApplySnapshotChunk\x12J\n\x06result\x18\x01 \x01(\x0e\x32\x32.tendermint.abci.ResponseApplySnapshotChunk.ResultR\x06result\x12%\n\x0erefetch_chunks\x18\x02 \x03(\rR\rrefetchChunks\x12%\n\x0ereject_senders\x18\x03 \x03(\tR\rrejectSenders\"`\n\x06Result\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06\x41\x43\x43\x45PT\x10\x01\x12\t\n\x05\x41\x42ORT\x10\x02\x12\t\n\x05RETRY\x10\x03\x12\x12\n\x0eRETRY_SNAPSHOT\x10\x04\x12\x13\n\x0fREJECT_SNAPSHOT\x10\x05\"\xff\x01\n\x0f\x43onsensusParams\x12\x32\n\x05\x62lock\x18\x01 \x01(\x0b\x32\x1c.tendermint.abci.BlockParamsR\x05\x62lock\x12<\n\x08\x65vidence\x18\x02 \x01(\x0b\x32 .tendermint.types.EvidenceParamsR\x08\x65vidence\x12?\n\tvalidator\x18\x03 \x01(\x0b\x32!.tendermint.types.ValidatorParamsR\tvalidator\x12\x39\n\x07version\x18\x04 \x01(\x0b\x32\x1f.tendermint.types.VersionParamsR\x07version\"C\n\x0b\x42lockParams\x12\x1b\n\tmax_bytes\x18\x01 \x01(\x03R\x08maxBytes\x12\x17\n\x07max_gas\x18\x02 \x01(\x03R\x06maxGas\"]\n\x0eLastCommitInfo\x12\x14\n\x05round\x18\x01 \x01(\x05R\x05round\x12\x35\n\x05votes\x18\x02 \x03(\x0b\x32\x19.tendermint.abci.VoteInfoB\x04\xc8\xde\x1f\x00R\x05votes\"z\n\x05\x45vent\x12\x12\n\x04type\x18\x01 \x01(\tR\x04type\x12]\n\nattributes\x18\x02 \x03(\x0b\x32\x1f.tendermint.abci.EventAttributeB\x1c\xc8\xde\x1f\x00\xea\xde\x1f\x14\x61ttributes,omitemptyR\nattributes\"N\n\x0e\x45ventAttribute\x12\x10\n\x03key\x18\x01 \x01(\x0cR\x03key\x12\x14\n\x05value\x18\x02 \x01(\x0cR\x05value\x12\x14\n\x05index\x18\x03 \x01(\x08R\x05index\"\x8a\x01\n\x08TxResult\x12\x16\n\x06height\x18\x01 \x01(\x03R\x06height\x12\x14\n\x05index\x18\x02 \x01(\rR\x05index\x12\x0e\n\x02tx\x18\x03 \x01(\x0cR\x02tx\x12@\n\x06result\x18\x04 \x01(\x0b\x32\".tendermint.abci.ResponseDeliverTxB\x04\xc8\xde\x1f\x00R\x06result\";\n\tValidator\x12\x18\n\x07\x61\x64\x64ress\x18\x01 \x01(\x0cR\x07\x61\x64\x64ress\x12\x14\n\x05power\x18\x03 \x01(\x03R\x05power\"d\n\x0fValidatorUpdate\x12;\n\x07pub_key\x18\x01 \x01(\x0b\x32\x1c.tendermint.crypto.PublicKeyB\x04\xc8\xde\x1f\x00R\x06pubKey\x12\x14\n\x05power\x18\x02 \x01(\x03R\x05power\"v\n\x08VoteInfo\x12>\n\tvalidator\x18\x01 \x01(\x0b\x32\x1a.tendermint.abci.ValidatorB\x04\xc8\xde\x1f\x00R\tvalidator\x12*\n\x11signed_last_block\x18\x02 \x01(\x08R\x0fsignedLastBlock\"\xfd\x01\n\x08\x45vidence\x12\x31\n\x04type\x18\x01 \x01(\x0e\x32\x1d.tendermint.abci.EvidenceTypeR\x04type\x12>\n\tvalidator\x18\x02 \x01(\x0b\x32\x1a.tendermint.abci.ValidatorB\x04\xc8\xde\x1f\x00R\tvalidator\x12\x16\n\x06height\x18\x03 \x01(\x03R\x06height\x12\x38\n\x04time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x08\xc8\xde\x1f\x00\x90\xdf\x1f\x01R\x04time\x12,\n\x12total_voting_power\x18\x05 \x01(\x03R\x10totalVotingPower\"\x82\x01\n\x08Snapshot\x12\x16\n\x06height\x18\x01 \x01(\x04R\x06height\x12\x16\n\x06\x66ormat\x18\x02 \x01(\rR\x06\x66ormat\x12\x16\n\x06\x63hunks\x18\x03 \x01(\rR\x06\x63hunks\x12\x12\n\x04hash\x18\x04 \x01(\x0cR\x04hash\x12\x1a\n\x08metadata\x18\x05 \x01(\x0cR\x08metadata*9\n\x0b\x43heckTxType\x12\x10\n\x03NEW\x10\x00\x1a\x07\x8a\x9d \x03New\x12\x18\n\x07RECHECK\x10\x01\x1a\x0b\x8a\x9d \x07Recheck*H\n\x0c\x45videnceType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x12\n\x0e\x44UPLICATE_VOTE\x10\x01\x12\x17\n\x13LIGHT_CLIENT_ATTACK\x10\x02\x32\x83\n\n\x0f\x41\x42\x43IApplication\x12\x43\n\x04\x45\x63ho\x12\x1c.tendermint.abci.RequestEcho\x1a\x1d.tendermint.abci.ResponseEcho\x12\x46\n\x05\x46lush\x12\x1d.tendermint.abci.RequestFlush\x1a\x1e.tendermint.abci.ResponseFlush\x12\x43\n\x04Info\x12\x1c.tendermint.abci.RequestInfo\x1a\x1d.tendermint.abci.ResponseInfo\x12R\n\tSetOption\x12!.tendermint.abci.RequestSetOption\x1a\".tendermint.abci.ResponseSetOption\x12R\n\tDeliverTx\x12!.tendermint.abci.RequestDeliverTx\x1a\".tendermint.abci.ResponseDeliverTx\x12L\n\x07\x43heckTx\x12\x1f.tendermint.abci.RequestCheckTx\x1a .tendermint.abci.ResponseCheckTx\x12\x46\n\x05Query\x12\x1d.tendermint.abci.RequestQuery\x1a\x1e.tendermint.abci.ResponseQuery\x12I\n\x06\x43ommit\x12\x1e.tendermint.abci.RequestCommit\x1a\x1f.tendermint.abci.ResponseCommit\x12R\n\tInitChain\x12!.tendermint.abci.RequestInitChain\x1a\".tendermint.abci.ResponseInitChain\x12U\n\nBeginBlock\x12\".tendermint.abci.RequestBeginBlock\x1a#.tendermint.abci.ResponseBeginBlock\x12O\n\x08\x45ndBlock\x12 .tendermint.abci.RequestEndBlock\x1a!.tendermint.abci.ResponseEndBlock\x12^\n\rListSnapshots\x12%.tendermint.abci.RequestListSnapshots\x1a&.tendermint.abci.ResponseListSnapshots\x12^\n\rOfferSnapshot\x12%.tendermint.abci.RequestOfferSnapshot\x1a&.tendermint.abci.ResponseOfferSnapshot\x12j\n\x11LoadSnapshotChunk\x12).tendermint.abci.RequestLoadSnapshotChunk\x1a*.tendermint.abci.ResponseLoadSnapshotChunk\x12m\n\x12\x41pplySnapshotChunk\x12*.tendermint.abci.RequestApplySnapshotChunk\x1a+.tendermint.abci.ResponseApplySnapshotChunkB-Z+github.com/tendermint/tendermint/abci/typesb\x06proto3')

_CHECKTXTYPE = DESCRIPTOR.enum_types_by_name['CheckTxType']
CheckTxType = enum_type_wrapper.EnumTypeWrapper(_CHECKTXTYPE)
_EVIDENCETYPE = DESCRIPTOR.enum_types_by_name['EvidenceType']
EvidenceType = enum_type_wrapper.EnumTypeWrapper(_EVIDENCETYPE)
NEW = 0
RECHECK = 1
UNKNOWN = 0
DUPLICATE_VOTE = 1
LIGHT_CLIENT_ATTACK = 2


_REQUEST = DESCRIPTOR.message_types_by_name['Request']
_REQUESTECHO = DESCRIPTOR.message_types_by_name['RequestEcho']
_REQUESTFLUSH = DESCRIPTOR.message_types_by_name['RequestFlush']
_REQUESTINFO = DESCRIPTOR.message_types_by_name['RequestInfo']
_REQUESTSETOPTION = DESCRIPTOR.message_types_by_name['RequestSetOption']
_REQUESTINITCHAIN = DESCRIPTOR.message_types_by_name['RequestInitChain']
_REQUESTQUERY = DESCRIPTOR.message_types_by_name['RequestQuery']
_REQUESTBEGINBLOCK = DESCRIPTOR.message_types_by_name['RequestBeginBlock']
_REQUESTCHECKTX = DESCRIPTOR.message_types_by_name['RequestCheckTx']
_REQUESTDELIVERTX = DESCRIPTOR.message_types_by_name['RequestDeliverTx']
_REQUESTENDBLOCK = DESCRIPTOR.message_types_by_name['RequestEndBlock']
_REQUESTCOMMIT = DESCRIPTOR.message_types_by_name['RequestCommit']
_REQUESTLISTSNAPSHOTS = DESCRIPTOR.message_types_by_name['RequestListSnapshots']
_REQUESTOFFERSNAPSHOT = DESCRIPTOR.message_types_by_name['RequestOfferSnapshot']
_REQUESTLOADSNAPSHOTCHUNK = DESCRIPTOR.message_types_by_name['RequestLoadSnapshotChunk']
_REQUESTAPPLYSNAPSHOTCHUNK = DESCRIPTOR.message_types_by_name['RequestApplySnapshotChunk']
_RESPONSE = DESCRIPTOR.message_types_by_name['Response']
_RESPONSEEXCEPTION = DESCRIPTOR.message_types_by_name['ResponseException']
_RESPONSEECHO = DESCRIPTOR.message_types_by_name['ResponseEcho']
_RESPONSEFLUSH = DESCRIPTOR.message_types_by_name['ResponseFlush']
_RESPONSEINFO = DESCRIPTOR.message_types_by_name['ResponseInfo']
_RESPONSESETOPTION = DESCRIPTOR.message_types_by_name['ResponseSetOption']
_RESPONSEINITCHAIN = DESCRIPTOR.message_types_by_name['ResponseInitChain']
_RESPONSEQUERY = DESCRIPTOR.message_types_by_name['ResponseQuery']
_RESPONSEBEGINBLOCK = DESCRIPTOR.message_types_by_name['ResponseBeginBlock']
_RESPONSECHECKTX = DESCRIPTOR.message_types_by_name['ResponseCheckTx']
_RESPONSEDELIVERTX = DESCRIPTOR.message_types_by_name['ResponseDeliverTx']
_RESPONSEENDBLOCK = DESCRIPTOR.message_types_by_name['ResponseEndBlock']
_RESPONSECOMMIT = DESCRIPTOR.message_types_by_name['ResponseCommit']
_RESPONSELISTSNAPSHOTS = DESCRIPTOR.message_types_by_name['ResponseListSnapshots']
_RESPONSEOFFERSNAPSHOT = DESCRIPTOR.message_types_by_name['ResponseOfferSnapshot']
_RESPONSELOADSNAPSHOTCHUNK = DESCRIPTOR.message_types_by_name['ResponseLoadSnapshotChunk']
_RESPONSEAPPLYSNAPSHOTCHUNK = DESCRIPTOR.message_types_by_name['ResponseApplySnapshotChunk']
_CONSENSUSPARAMS = DESCRIPTOR.message_types_by_name['ConsensusParams']
_BLOCKPARAMS = DESCRIPTOR.message_types_by_name['BlockParams']
_LASTCOMMITINFO = DESCRIPTOR.message_types_by_name['LastCommitInfo']
_EVENT = DESCRIPTOR.message_types_by_name['Event']
_EVENTATTRIBUTE = DESCRIPTOR.message_types_by_name['EventAttribute']
_TXRESULT = DESCRIPTOR.message_types_by_name['TxResult']
_VALIDATOR = DESCRIPTOR.message_types_by_name['Validator']
_VALIDATORUPDATE = DESCRIPTOR.message_types_by_name['ValidatorUpdate']
_VOTEINFO = DESCRIPTOR.message_types_by_name['VoteInfo']
_EVIDENCE = DESCRIPTOR.message_types_by_name['Evidence']
_SNAPSHOT = DESCRIPTOR.message_types_by_name['Snapshot']
_RESPONSEOFFERSNAPSHOT_RESULT = _RESPONSEOFFERSNAPSHOT.enum_types_by_name['Result']
_RESPONSEAPPLYSNAPSHOTCHUNK_RESULT = _RESPONSEAPPLYSNAPSHOTCHUNK.enum_types_by_name['Result']
Request = _reflection.GeneratedProtocolMessageType('Request', (_message.Message,), {
  'DESCRIPTOR' : _REQUEST,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.Request)
  })
_sym_db.RegisterMessage(Request)

RequestEcho = _reflection.GeneratedProtocolMessageType('RequestEcho', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTECHO,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestEcho)
  })
_sym_db.RegisterMessage(RequestEcho)

RequestFlush = _reflection.GeneratedProtocolMessageType('RequestFlush', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTFLUSH,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestFlush)
  })
_sym_db.RegisterMessage(RequestFlush)

RequestInfo = _reflection.GeneratedProtocolMessageType('RequestInfo', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTINFO,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestInfo)
  })
_sym_db.RegisterMessage(RequestInfo)

RequestSetOption = _reflection.GeneratedProtocolMessageType('RequestSetOption', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTSETOPTION,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestSetOption)
  })
_sym_db.RegisterMessage(RequestSetOption)

RequestInitChain = _reflection.GeneratedProtocolMessageType('RequestInitChain', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTINITCHAIN,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestInitChain)
  })
_sym_db.RegisterMessage(RequestInitChain)

RequestQuery = _reflection.GeneratedProtocolMessageType('RequestQuery', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTQUERY,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestQuery)
  })
_sym_db.RegisterMessage(RequestQuery)

RequestBeginBlock = _reflection.GeneratedProtocolMessageType('RequestBeginBlock', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTBEGINBLOCK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestBeginBlock)
  })
_sym_db.RegisterMessage(RequestBeginBlock)

RequestCheckTx = _reflection.GeneratedProtocolMessageType('RequestCheckTx', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTCHECKTX,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestCheckTx)
  })
_sym_db.RegisterMessage(RequestCheckTx)

RequestDeliverTx = _reflection.GeneratedProtocolMessageType('RequestDeliverTx', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTDELIVERTX,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestDeliverTx)
  })
_sym_db.RegisterMessage(RequestDeliverTx)

RequestEndBlock = _reflection.GeneratedProtocolMessageType('RequestEndBlock', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTENDBLOCK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestEndBlock)
  })
_sym_db.RegisterMessage(RequestEndBlock)

RequestCommit = _reflection.GeneratedProtocolMessageType('RequestCommit', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTCOMMIT,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestCommit)
  })
_sym_db.RegisterMessage(RequestCommit)

RequestListSnapshots = _reflection.GeneratedProtocolMessageType('RequestListSnapshots', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTLISTSNAPSHOTS,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestListSnapshots)
  })
_sym_db.RegisterMessage(RequestListSnapshots)

RequestOfferSnapshot = _reflection.GeneratedProtocolMessageType('RequestOfferSnapshot', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTOFFERSNAPSHOT,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestOfferSnapshot)
  })
_sym_db.RegisterMessage(RequestOfferSnapshot)

RequestLoadSnapshotChunk = _reflection.GeneratedProtocolMessageType('RequestLoadSnapshotChunk', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTLOADSNAPSHOTCHUNK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestLoadSnapshotChunk)
  })
_sym_db.RegisterMessage(RequestLoadSnapshotChunk)

RequestApplySnapshotChunk = _reflection.GeneratedProtocolMessageType('RequestApplySnapshotChunk', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTAPPLYSNAPSHOTCHUNK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.RequestApplySnapshotChunk)
  })
_sym_db.RegisterMessage(RequestApplySnapshotChunk)

Response = _reflection.GeneratedProtocolMessageType('Response', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSE,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.Response)
  })
_sym_db.RegisterMessage(Response)

ResponseException = _reflection.GeneratedProtocolMessageType('ResponseException', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEEXCEPTION,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseException)
  })
_sym_db.RegisterMessage(ResponseException)

ResponseEcho = _reflection.GeneratedProtocolMessageType('ResponseEcho', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEECHO,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseEcho)
  })
_sym_db.RegisterMessage(ResponseEcho)

ResponseFlush = _reflection.GeneratedProtocolMessageType('ResponseFlush', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEFLUSH,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseFlush)
  })
_sym_db.RegisterMessage(ResponseFlush)

ResponseInfo = _reflection.GeneratedProtocolMessageType('ResponseInfo', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEINFO,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseInfo)
  })
_sym_db.RegisterMessage(ResponseInfo)

ResponseSetOption = _reflection.GeneratedProtocolMessageType('ResponseSetOption', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSESETOPTION,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseSetOption)
  })
_sym_db.RegisterMessage(ResponseSetOption)

ResponseInitChain = _reflection.GeneratedProtocolMessageType('ResponseInitChain', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEINITCHAIN,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseInitChain)
  })
_sym_db.RegisterMessage(ResponseInitChain)

ResponseQuery = _reflection.GeneratedProtocolMessageType('ResponseQuery', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEQUERY,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseQuery)
  })
_sym_db.RegisterMessage(ResponseQuery)

ResponseBeginBlock = _reflection.GeneratedProtocolMessageType('ResponseBeginBlock', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEBEGINBLOCK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseBeginBlock)
  })
_sym_db.RegisterMessage(ResponseBeginBlock)

ResponseCheckTx = _reflection.GeneratedProtocolMessageType('ResponseCheckTx', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSECHECKTX,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseCheckTx)
  })
_sym_db.RegisterMessage(ResponseCheckTx)

ResponseDeliverTx = _reflection.GeneratedProtocolMessageType('ResponseDeliverTx', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEDELIVERTX,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseDeliverTx)
  })
_sym_db.RegisterMessage(ResponseDeliverTx)

ResponseEndBlock = _reflection.GeneratedProtocolMessageType('ResponseEndBlock', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEENDBLOCK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseEndBlock)
  })
_sym_db.RegisterMessage(ResponseEndBlock)

ResponseCommit = _reflection.GeneratedProtocolMessageType('ResponseCommit', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSECOMMIT,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseCommit)
  })
_sym_db.RegisterMessage(ResponseCommit)

ResponseListSnapshots = _reflection.GeneratedProtocolMessageType('ResponseListSnapshots', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSELISTSNAPSHOTS,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseListSnapshots)
  })
_sym_db.RegisterMessage(ResponseListSnapshots)

ResponseOfferSnapshot = _reflection.GeneratedProtocolMessageType('ResponseOfferSnapshot', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEOFFERSNAPSHOT,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseOfferSnapshot)
  })
_sym_db.RegisterMessage(ResponseOfferSnapshot)

ResponseLoadSnapshotChunk = _reflection.GeneratedProtocolMessageType('ResponseLoadSnapshotChunk', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSELOADSNAPSHOTCHUNK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseLoadSnapshotChunk)
  })
_sym_db.RegisterMessage(ResponseLoadSnapshotChunk)

ResponseApplySnapshotChunk = _reflection.GeneratedProtocolMessageType('ResponseApplySnapshotChunk', (_message.Message,), {
  'DESCRIPTOR' : _RESPONSEAPPLYSNAPSHOTCHUNK,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ResponseApplySnapshotChunk)
  })
_sym_db.RegisterMessage(ResponseApplySnapshotChunk)

ConsensusParams = _reflection.GeneratedProtocolMessageType('ConsensusParams', (_message.Message,), {
  'DESCRIPTOR' : _CONSENSUSPARAMS,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ConsensusParams)
  })
_sym_db.RegisterMessage(ConsensusParams)

BlockParams = _reflection.GeneratedProtocolMessageType('BlockParams', (_message.Message,), {
  'DESCRIPTOR' : _BLOCKPARAMS,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.BlockParams)
  })
_sym_db.RegisterMessage(BlockParams)

LastCommitInfo = _reflection.GeneratedProtocolMessageType('LastCommitInfo', (_message.Message,), {
  'DESCRIPTOR' : _LASTCOMMITINFO,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.LastCommitInfo)
  })
_sym_db.RegisterMessage(LastCommitInfo)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.Event)
  })
_sym_db.RegisterMessage(Event)

EventAttribute = _reflection.GeneratedProtocolMessageType('EventAttribute', (_message.Message,), {
  'DESCRIPTOR' : _EVENTATTRIBUTE,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.EventAttribute)
  })
_sym_db.RegisterMessage(EventAttribute)

TxResult = _reflection.GeneratedProtocolMessageType('TxResult', (_message.Message,), {
  'DESCRIPTOR' : _TXRESULT,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.TxResult)
  })
_sym_db.RegisterMessage(TxResult)

Validator = _reflection.GeneratedProtocolMessageType('Validator', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATOR,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.Validator)
  })
_sym_db.RegisterMessage(Validator)

ValidatorUpdate = _reflection.GeneratedProtocolMessageType('ValidatorUpdate', (_message.Message,), {
  'DESCRIPTOR' : _VALIDATORUPDATE,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.ValidatorUpdate)
  })
_sym_db.RegisterMessage(ValidatorUpdate)

VoteInfo = _reflection.GeneratedProtocolMessageType('VoteInfo', (_message.Message,), {
  'DESCRIPTOR' : _VOTEINFO,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.VoteInfo)
  })
_sym_db.RegisterMessage(VoteInfo)

Evidence = _reflection.GeneratedProtocolMessageType('Evidence', (_message.Message,), {
  'DESCRIPTOR' : _EVIDENCE,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.Evidence)
  })
_sym_db.RegisterMessage(Evidence)

Snapshot = _reflection.GeneratedProtocolMessageType('Snapshot', (_message.Message,), {
  'DESCRIPTOR' : _SNAPSHOT,
  '__module__' : 'tendermint.abci.types_pb2'
  # @@protoc_insertion_point(class_scope:tendermint.abci.Snapshot)
  })
_sym_db.RegisterMessage(Snapshot)

_ABCIAPPLICATION = DESCRIPTOR.services_by_name['ABCIApplication']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z+github.com/tendermint/tendermint/abci/types'
  _CHECKTXTYPE.values_by_name["NEW"]._options = None
  _CHECKTXTYPE.values_by_name["NEW"]._serialized_options = b'\212\235 \003New'
  _CHECKTXTYPE.values_by_name["RECHECK"]._options = None
  _CHECKTXTYPE.values_by_name["RECHECK"]._serialized_options = b'\212\235 \007Recheck'
  _REQUESTINITCHAIN.fields_by_name['time']._options = None
  _REQUESTINITCHAIN.fields_by_name['time']._serialized_options = b'\310\336\037\000\220\337\037\001'
  _REQUESTINITCHAIN.fields_by_name['validators']._options = None
  _REQUESTINITCHAIN.fields_by_name['validators']._serialized_options = b'\310\336\037\000'
  _REQUESTBEGINBLOCK.fields_by_name['header']._options = None
  _REQUESTBEGINBLOCK.fields_by_name['header']._serialized_options = b'\310\336\037\000'
  _REQUESTBEGINBLOCK.fields_by_name['last_commit_info']._options = None
  _REQUESTBEGINBLOCK.fields_by_name['last_commit_info']._serialized_options = b'\310\336\037\000'
  _REQUESTBEGINBLOCK.fields_by_name['byzantine_validators']._options = None
  _REQUESTBEGINBLOCK.fields_by_name['byzantine_validators']._serialized_options = b'\310\336\037\000'
  _RESPONSEINITCHAIN.fields_by_name['validators']._options = None
  _RESPONSEINITCHAIN.fields_by_name['validators']._serialized_options = b'\310\336\037\000'
  _RESPONSEBEGINBLOCK.fields_by_name['events']._options = None
  _RESPONSEBEGINBLOCK.fields_by_name['events']._serialized_options = b'\310\336\037\000\352\336\037\020events,omitempty'
  _RESPONSECHECKTX.fields_by_name['events']._options = None
  _RESPONSECHECKTX.fields_by_name['events']._serialized_options = b'\310\336\037\000\352\336\037\020events,omitempty'
  _RESPONSEDELIVERTX.fields_by_name['events']._options = None
  _RESPONSEDELIVERTX.fields_by_name['events']._serialized_options = b'\310\336\037\000\352\336\037\020events,omitempty'
  _RESPONSEENDBLOCK.fields_by_name['validator_updates']._options = None
  _RESPONSEENDBLOCK.fields_by_name['validator_updates']._serialized_options = b'\310\336\037\000'
  _RESPONSEENDBLOCK.fields_by_name['events']._options = None
  _RESPONSEENDBLOCK.fields_by_name['events']._serialized_options = b'\310\336\037\000\352\336\037\020events,omitempty'
  _LASTCOMMITINFO.fields_by_name['votes']._options = None
  _LASTCOMMITINFO.fields_by_name['votes']._serialized_options = b'\310\336\037\000'
  _EVENT.fields_by_name['attributes']._options = None
  _EVENT.fields_by_name['attributes']._serialized_options = b'\310\336\037\000\352\336\037\024attributes,omitempty'
  _TXRESULT.fields_by_name['result']._options = None
  _TXRESULT.fields_by_name['result']._serialized_options = b'\310\336\037\000'
  _VALIDATORUPDATE.fields_by_name['pub_key']._options = None
  _VALIDATORUPDATE.fields_by_name['pub_key']._serialized_options = b'\310\336\037\000'
  _VOTEINFO.fields_by_name['validator']._options = None
  _VOTEINFO.fields_by_name['validator']._serialized_options = b'\310\336\037\000'
  _EVIDENCE.fields_by_name['validator']._options = None
  _EVIDENCE.fields_by_name['validator']._serialized_options = b'\310\336\037\000'
  _EVIDENCE.fields_by_name['time']._options = None
  _EVIDENCE.fields_by_name['time']._serialized_options = b'\310\336\037\000\220\337\037\001'
  _CHECKTXTYPE._serialized_start=7660
  _CHECKTXTYPE._serialized_end=7717
  _EVIDENCETYPE._serialized_start=7719
  _EVIDENCETYPE._serialized_end=7791
  _REQUEST._serialized_start=226
  _REQUEST._serialized_end=1267
  _REQUESTECHO._serialized_start=1269
  _REQUESTECHO._serialized_end=1308
  _REQUESTFLUSH._serialized_start=1310
  _REQUESTFLUSH._serialized_end=1324
  _REQUESTINFO._serialized_start=1326
  _REQUESTINFO._serialized_end=1435
  _REQUESTSETOPTION._serialized_start=1437
  _REQUESTSETOPTION._serialized_end=1495
  _REQUESTINITCHAIN._serialized_start=1498
  _REQUESTINITCHAIN._serialized_end=1829
  _REQUESTQUERY._serialized_start=1831
  _REQUESTQUERY._serialized_end=1931
  _REQUESTBEGINBLOCK._serialized_start=1934
  _REQUESTBEGINBLOCK._serialized_end=2194
  _REQUESTCHECKTX._serialized_start=2196
  _REQUESTCHECKTX._serialized_end=2278
  _REQUESTDELIVERTX._serialized_start=2280
  _REQUESTDELIVERTX._serialized_end=2314
  _REQUESTENDBLOCK._serialized_start=2316
  _REQUESTENDBLOCK._serialized_end=2357
  _REQUESTCOMMIT._serialized_start=2359
  _REQUESTCOMMIT._serialized_end=2374
  _REQUESTLISTSNAPSHOTS._serialized_start=2376
  _REQUESTLISTSNAPSHOTS._serialized_end=2398
  _REQUESTOFFERSNAPSHOT._serialized_start=2400
  _REQUESTOFFERSNAPSHOT._serialized_end=2504
  _REQUESTLOADSNAPSHOTCHUNK._serialized_start=2506
  _REQUESTLOADSNAPSHOTCHUNK._serialized_end=2602
  _REQUESTAPPLYSNAPSHOTCHUNK._serialized_start=2604
  _REQUESTAPPLYSNAPSHOTCHUNK._serialized_end=2699
  _RESPONSE._serialized_start=2702
  _RESPONSE._serialized_end=3827
  _RESPONSEEXCEPTION._serialized_start=3829
  _RESPONSEEXCEPTION._serialized_end=3870
  _RESPONSEECHO._serialized_start=3872
  _RESPONSEECHO._serialized_end=3912
  _RESPONSEFLUSH._serialized_start=3914
  _RESPONSEFLUSH._serialized_end=3929
  _RESPONSEINFO._serialized_start=3932
  _RESPONSEINFO._serialized_end=4116
  _RESPONSESETOPTION._serialized_start=4118
  _RESPONSESETOPTION._serialized_end=4195
  _RESPONSEINITCHAIN._serialized_start=4198
  _RESPONSEINITCHAIN._serialized_end=4393
  _RESPONSEQUERY._serialized_start=4396
  _RESPONSEQUERY._serialized_end=4643
  _RESPONSEBEGINBLOCK._serialized_start=4645
  _RESPONSEBEGINBLOCK._serialized_end=4739
  _RESPONSECHECKTX._serialized_start=4742
  _RESPONSECHECKTX._serialized_end=5001
  _RESPONSEDELIVERTX._serialized_start=5004
  _RESPONSEDELIVERTX._serialized_end=5265
  _RESPONSEENDBLOCK._serialized_start=5268
  _RESPONSEENDBLOCK._serialized_end=5535
  _RESPONSECOMMIT._serialized_start=5537
  _RESPONSECOMMIT._serialized_end=5610
  _RESPONSELISTSNAPSHOTS._serialized_start=5612
  _RESPONSELISTSNAPSHOTS._serialized_end=5692
  _RESPONSEOFFERSNAPSHOT._serialized_start=5695
  _RESPONSEOFFERSNAPSHOT._serialized_end=5885
  _RESPONSEOFFERSNAPSHOT_RESULT._serialized_start=5791
  _RESPONSEOFFERSNAPSHOT_RESULT._serialized_end=5885
  _RESPONSELOADSNAPSHOTCHUNK._serialized_start=5887
  _RESPONSELOADSNAPSHOTCHUNK._serialized_end=5936
  _RESPONSEAPPLYSNAPSHOTCHUNK._serialized_start=5939
  _RESPONSEAPPLYSNAPSHOTCHUNK._serialized_end=6219
  _RESPONSEAPPLYSNAPSHOTCHUNK_RESULT._serialized_start=6123
  _RESPONSEAPPLYSNAPSHOTCHUNK_RESULT._serialized_end=6219
  _CONSENSUSPARAMS._serialized_start=6222
  _CONSENSUSPARAMS._serialized_end=6477
  _BLOCKPARAMS._serialized_start=6479
  _BLOCKPARAMS._serialized_end=6546
  _LASTCOMMITINFO._serialized_start=6548
  _LASTCOMMITINFO._serialized_end=6641
  _EVENT._serialized_start=6643
  _EVENT._serialized_end=6765
  _EVENTATTRIBUTE._serialized_start=6767
  _EVENTATTRIBUTE._serialized_end=6845
  _TXRESULT._serialized_start=6848
  _TXRESULT._serialized_end=6986
  _VALIDATOR._serialized_start=6988
  _VALIDATOR._serialized_end=7047
  _VALIDATORUPDATE._serialized_start=7049
  _VALIDATORUPDATE._serialized_end=7149
  _VOTEINFO._serialized_start=7151
  _VOTEINFO._serialized_end=7269
  _EVIDENCE._serialized_start=7272
  _EVIDENCE._serialized_end=7525
  _SNAPSHOT._serialized_start=7528
  _SNAPSHOT._serialized_end=7658
  _ABCIAPPLICATION._serialized_start=7794
  _ABCIAPPLICATION._serialized_end=9077
# @@protoc_insertion_point(module_scope)
