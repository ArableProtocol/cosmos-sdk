//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/group/v1beta1/tx.proto

package cosmos.group.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun msgUpdateGroupPolicyDecisionPolicy(block: cosmos.group.v1beta1.MsgUpdateGroupPolicyDecisionPolicyKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Tx.MsgUpdateGroupPolicyDecisionPolicy =
  cosmos.group.v1beta1.MsgUpdateGroupPolicyDecisionPolicyKt.Dsl._create(cosmos.group.v1beta1.Tx.MsgUpdateGroupPolicyDecisionPolicy.newBuilder()).apply { block() }._build()
public object MsgUpdateGroupPolicyDecisionPolicyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.group.v1beta1.Tx.MsgUpdateGroupPolicyDecisionPolicy.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.group.v1beta1.Tx.MsgUpdateGroupPolicyDecisionPolicy.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.group.v1beta1.Tx.MsgUpdateGroupPolicyDecisionPolicy = _builder.build()

    /**
     * <pre>
     * admin is the account address of the group admin.
     * </pre>
     *
     * <code>string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var admin: kotlin.String
      @JvmName("getAdmin")
      get() = _builder.getAdmin()
      @JvmName("setAdmin")
      set(value) {
        _builder.setAdmin(value)
      }
    /**
     * <pre>
     * admin is the account address of the group admin.
     * </pre>
     *
     * <code>string admin = 1 [json_name = "admin", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearAdmin() {
      _builder.clearAdmin()
    }

    /**
     * <pre>
     * address is the account address of group policy.
     * </pre>
     *
     * <code>string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.getAddress()
      @JvmName("setAddress")
      set(value) {
        _builder.setAddress(value)
      }
    /**
     * <pre>
     * address is the account address of group policy.
     * </pre>
     *
     * <code>string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * <pre>
     * decision_policy is the updated group policy's decision policy.
     * </pre>
     *
     * <code>.google.protobuf.Any decision_policy = 3 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "DecisionPolicy"];</code>
     */
    public var decisionPolicy: com.google.protobuf.Any
      @JvmName("getDecisionPolicy")
      get() = _builder.getDecisionPolicy()
      @JvmName("setDecisionPolicy")
      set(value) {
        _builder.setDecisionPolicy(value)
      }
    /**
     * <pre>
     * decision_policy is the updated group policy's decision policy.
     * </pre>
     *
     * <code>.google.protobuf.Any decision_policy = 3 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "DecisionPolicy"];</code>
     */
    public fun clearDecisionPolicy() {
      _builder.clearDecisionPolicy()
    }
    /**
     * <pre>
     * decision_policy is the updated group policy's decision policy.
     * </pre>
     *
     * <code>.google.protobuf.Any decision_policy = 3 [json_name = "decisionPolicy", (.cosmos_proto.accepts_interface) = "DecisionPolicy"];</code>
     * @return Whether the decisionPolicy field is set.
     */
    public fun hasDecisionPolicy(): kotlin.Boolean {
      return _builder.hasDecisionPolicy()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.group.v1beta1.Tx.MsgUpdateGroupPolicyDecisionPolicy.copy(block: cosmos.group.v1beta1.MsgUpdateGroupPolicyDecisionPolicyKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Tx.MsgUpdateGroupPolicyDecisionPolicy =
  cosmos.group.v1beta1.MsgUpdateGroupPolicyDecisionPolicyKt.Dsl._create(this.toBuilder()).apply { block() }._build()
