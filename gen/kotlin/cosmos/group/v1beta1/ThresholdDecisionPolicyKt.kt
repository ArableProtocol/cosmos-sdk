//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/group/v1beta1/types.proto

package cosmos.group.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun thresholdDecisionPolicy(block: cosmos.group.v1beta1.ThresholdDecisionPolicyKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Types.ThresholdDecisionPolicy =
  cosmos.group.v1beta1.ThresholdDecisionPolicyKt.Dsl._create(cosmos.group.v1beta1.Types.ThresholdDecisionPolicy.newBuilder()).apply { block() }._build()
public object ThresholdDecisionPolicyKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.group.v1beta1.Types.ThresholdDecisionPolicy.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.group.v1beta1.Types.ThresholdDecisionPolicy.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.group.v1beta1.Types.ThresholdDecisionPolicy = _builder.build()

    /**
     * <pre>
     * threshold is the minimum weighted sum of yes votes that must be met or exceeded for a proposal to succeed.
     * </pre>
     *
     * <code>string threshold = 1 [json_name = "threshold"];</code>
     */
    public var threshold: kotlin.String
      @JvmName("getThreshold")
      get() = _builder.getThreshold()
      @JvmName("setThreshold")
      set(value) {
        _builder.setThreshold(value)
      }
    /**
     * <pre>
     * threshold is the minimum weighted sum of yes votes that must be met or exceeded for a proposal to succeed.
     * </pre>
     *
     * <code>string threshold = 1 [json_name = "threshold"];</code>
     */
    public fun clearThreshold() {
      _builder.clearThreshold()
    }

    /**
     * <pre>
     * timeout is the duration from submission of a proposal to the end of voting period
     * Within this times votes and exec messages can be submitted.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2 [json_name = "timeout", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    public var timeout: com.google.protobuf.Duration
      @JvmName("getTimeout")
      get() = _builder.getTimeout()
      @JvmName("setTimeout")
      set(value) {
        _builder.setTimeout(value)
      }
    /**
     * <pre>
     * timeout is the duration from submission of a proposal to the end of voting period
     * Within this times votes and exec messages can be submitted.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2 [json_name = "timeout", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     */
    public fun clearTimeout() {
      _builder.clearTimeout()
    }
    /**
     * <pre>
     * timeout is the duration from submission of a proposal to the end of voting period
     * Within this times votes and exec messages can be submitted.
     * </pre>
     *
     * <code>.google.protobuf.Duration timeout = 2 [json_name = "timeout", (.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];</code>
     * @return Whether the timeout field is set.
     */
    public fun hasTimeout(): kotlin.Boolean {
      return _builder.hasTimeout()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.group.v1beta1.Types.ThresholdDecisionPolicy.copy(block: cosmos.group.v1beta1.ThresholdDecisionPolicyKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Types.ThresholdDecisionPolicy =
  cosmos.group.v1beta1.ThresholdDecisionPolicyKt.Dsl._create(this.toBuilder()).apply { block() }._build()
