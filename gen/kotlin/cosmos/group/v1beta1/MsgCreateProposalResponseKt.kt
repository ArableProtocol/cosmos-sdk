//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/group/v1beta1/tx.proto

package cosmos.group.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun msgCreateProposalResponse(block: cosmos.group.v1beta1.MsgCreateProposalResponseKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Tx.MsgCreateProposalResponse =
  cosmos.group.v1beta1.MsgCreateProposalResponseKt.Dsl._create(cosmos.group.v1beta1.Tx.MsgCreateProposalResponse.newBuilder()).apply { block() }._build()
public object MsgCreateProposalResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.group.v1beta1.Tx.MsgCreateProposalResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.group.v1beta1.Tx.MsgCreateProposalResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.group.v1beta1.Tx.MsgCreateProposalResponse = _builder.build()

    /**
     * <pre>
     * proposal is the unique ID of the proposal.
     * </pre>
     *
     * <code>uint64 proposal_id = 1 [json_name = "proposalId"];</code>
     */
    public var proposalId: kotlin.Long
      @JvmName("getProposalId")
      get() = _builder.getProposalId()
      @JvmName("setProposalId")
      set(value) {
        _builder.setProposalId(value)
      }
    /**
     * <pre>
     * proposal is the unique ID of the proposal.
     * </pre>
     *
     * <code>uint64 proposal_id = 1 [json_name = "proposalId"];</code>
     */
    public fun clearProposalId() {
      _builder.clearProposalId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.group.v1beta1.Tx.MsgCreateProposalResponse.copy(block: cosmos.group.v1beta1.MsgCreateProposalResponseKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Tx.MsgCreateProposalResponse =
  cosmos.group.v1beta1.MsgCreateProposalResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
