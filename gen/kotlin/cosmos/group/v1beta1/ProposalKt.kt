//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/group/v1beta1/types.proto

package cosmos.group.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun proposal(block: cosmos.group.v1beta1.ProposalKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Types.Proposal =
  cosmos.group.v1beta1.ProposalKt.Dsl._create(cosmos.group.v1beta1.Types.Proposal.newBuilder()).apply { block() }._build()
public object ProposalKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.group.v1beta1.Types.Proposal.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.group.v1beta1.Types.Proposal.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.group.v1beta1.Types.Proposal = _builder.build()

    /**
     * <pre>
     * proposal_id is the unique id of the proposal.
     * </pre>
     *
     * <code>uint64 proposal_id = 1 [json_name = "proposalId"];</code>
     */
    public var proposalId: kotlin.Long
      @JvmName("getProposalId")
      get() = _builder.getProposalId()
      @JvmName("setProposalId")
      set(value) {
        _builder.setProposalId(value)
      }
    /**
     * <pre>
     * proposal_id is the unique id of the proposal.
     * </pre>
     *
     * <code>uint64 proposal_id = 1 [json_name = "proposalId"];</code>
     */
    public fun clearProposalId() {
      _builder.clearProposalId()
    }

    /**
     * <pre>
     * address is the account address of group policy.
     * </pre>
     *
     * <code>string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public var address: kotlin.String
      @JvmName("getAddress")
      get() = _builder.getAddress()
      @JvmName("setAddress")
      set(value) {
        _builder.setAddress(value)
      }
    /**
     * <pre>
     * address is the account address of group policy.
     * </pre>
     *
     * <code>string address = 2 [json_name = "address", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    public fun clearAddress() {
      _builder.clearAddress()
    }

    /**
     * <pre>
     * metadata is any arbitrary metadata to attached to the proposal.
     * </pre>
     *
     * <code>bytes metadata = 3 [json_name = "metadata"];</code>
     */
    public var metadata: com.google.protobuf.ByteString
      @JvmName("getMetadata")
      get() = _builder.getMetadata()
      @JvmName("setMetadata")
      set(value) {
        _builder.setMetadata(value)
      }
    /**
     * <pre>
     * metadata is any arbitrary metadata to attached to the proposal.
     * </pre>
     *
     * <code>bytes metadata = 3 [json_name = "metadata"];</code>
     */
    public fun clearMetadata() {
      _builder.clearMetadata()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ProposersProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * proposers are the account addresses of the proposers.
     * </pre>
     *
     * <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @return A list containing the proposers.
     */
    public val proposers: com.google.protobuf.kotlin.DslList<kotlin.String, ProposersProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getProposersList()
      )
    /**
     * <pre>
     * proposers are the account addresses of the proposers.
     * </pre>
     *
     * <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param value The proposers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addProposers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ProposersProxy>.add(value: kotlin.String) {
      _builder.addProposers(value)
    }
    /**
     * <pre>
     * proposers are the account addresses of the proposers.
     * </pre>
     *
     * <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param value The proposers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignProposers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ProposersProxy>.plusAssign(value: kotlin.String) {
      add(value)
    }
    /**
     * <pre>
     * proposers are the account addresses of the proposers.
     * </pre>
     *
     * <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param values The proposers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllProposers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ProposersProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
      _builder.addAllProposers(values)
    }
    /**
     * <pre>
     * proposers are the account addresses of the proposers.
     * </pre>
     *
     * <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param values The proposers to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllProposers")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ProposersProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
      addAll(values)
    }
    /**
     * <pre>
     * proposers are the account addresses of the proposers.
     * </pre>
     *
     * <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     * @param index The index to set the value at.
     * @param value The proposers to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setProposers")
    public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, ProposersProxy>.set(index: kotlin.Int, value: kotlin.String) {
      _builder.setProposers(index, value)
    }/**
     * <pre>
     * proposers are the account addresses of the proposers.
     * </pre>
     *
     * <code>repeated string proposers = 4 [json_name = "proposers", (.cosmos_proto.scalar) = "cosmos.AddressString"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearProposers")
    public fun com.google.protobuf.kotlin.DslList<kotlin.String, ProposersProxy>.clear() {
      _builder.clearProposers()
    }
    /**
     * <pre>
     * submitted_at is a timestamp specifying when a proposal was submitted.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp submitted_at = 5 [json_name = "submittedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public var submittedAt: com.google.protobuf.Timestamp
      @JvmName("getSubmittedAt")
      get() = _builder.getSubmittedAt()
      @JvmName("setSubmittedAt")
      set(value) {
        _builder.setSubmittedAt(value)
      }
    /**
     * <pre>
     * submitted_at is a timestamp specifying when a proposal was submitted.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp submitted_at = 5 [json_name = "submittedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public fun clearSubmittedAt() {
      _builder.clearSubmittedAt()
    }
    /**
     * <pre>
     * submitted_at is a timestamp specifying when a proposal was submitted.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp submitted_at = 5 [json_name = "submittedAt", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the submittedAt field is set.
     */
    public fun hasSubmittedAt(): kotlin.Boolean {
      return _builder.hasSubmittedAt()
    }

    /**
     * <pre>
     * group_version tracks the version of the group that this proposal corresponds to.
     * When group membership is changed, existing proposals from previous group versions will become invalid.
     * </pre>
     *
     * <code>uint64 group_version = 6 [json_name = "groupVersion"];</code>
     */
    public var groupVersion: kotlin.Long
      @JvmName("getGroupVersion")
      get() = _builder.getGroupVersion()
      @JvmName("setGroupVersion")
      set(value) {
        _builder.setGroupVersion(value)
      }
    /**
     * <pre>
     * group_version tracks the version of the group that this proposal corresponds to.
     * When group membership is changed, existing proposals from previous group versions will become invalid.
     * </pre>
     *
     * <code>uint64 group_version = 6 [json_name = "groupVersion"];</code>
     */
    public fun clearGroupVersion() {
      _builder.clearGroupVersion()
    }

    /**
     * <pre>
     * group_policy_version tracks the version of the group policy that this proposal corresponds to.
     * When a decision policy is changed, existing proposals from previous policy versions will become invalid.
     * </pre>
     *
     * <code>uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];</code>
     */
    public var groupPolicyVersion: kotlin.Long
      @JvmName("getGroupPolicyVersion")
      get() = _builder.getGroupPolicyVersion()
      @JvmName("setGroupPolicyVersion")
      set(value) {
        _builder.setGroupPolicyVersion(value)
      }
    /**
     * <pre>
     * group_policy_version tracks the version of the group policy that this proposal corresponds to.
     * When a decision policy is changed, existing proposals from previous policy versions will become invalid.
     * </pre>
     *
     * <code>uint64 group_policy_version = 7 [json_name = "groupPolicyVersion"];</code>
     */
    public fun clearGroupPolicyVersion() {
      _builder.clearGroupPolicyVersion()
    }

    /**
     * <pre>
     * Status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Proposal.Status status = 8 [json_name = "status"];</code>
     */
    public var status: cosmos.group.v1beta1.Types.Proposal.Status
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * <pre>
     * Status represents the high level position in the life cycle of the proposal. Initial value is Submitted.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Proposal.Status status = 8 [json_name = "status"];</code>
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * <pre>
     * result is the final result based on the votes and election rule. Initial value is unfinalized.
     * The result is persisted so that clients can always rely on this state and not have to replicate the logic.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Proposal.Result result = 9 [json_name = "result"];</code>
     */
    public var result: cosmos.group.v1beta1.Types.Proposal.Result
      @JvmName("getResult")
      get() = _builder.getResult()
      @JvmName("setResult")
      set(value) {
        _builder.setResult(value)
      }
    /**
     * <pre>
     * result is the final result based on the votes and election rule. Initial value is unfinalized.
     * The result is persisted so that clients can always rely on this state and not have to replicate the logic.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Proposal.Result result = 9 [json_name = "result"];</code>
     */
    public fun clearResult() {
      _builder.clearResult()
    }

    /**
     * <pre>
     * vote_state contains the sums of all weighted votes for this proposal.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Tally vote_state = 10 [json_name = "voteState", (.gogoproto.nullable) = false];</code>
     */
    public var voteState: cosmos.group.v1beta1.Types.Tally
      @JvmName("getVoteState")
      get() = _builder.getVoteState()
      @JvmName("setVoteState")
      set(value) {
        _builder.setVoteState(value)
      }
    /**
     * <pre>
     * vote_state contains the sums of all weighted votes for this proposal.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Tally vote_state = 10 [json_name = "voteState", (.gogoproto.nullable) = false];</code>
     */
    public fun clearVoteState() {
      _builder.clearVoteState()
    }
    /**
     * <pre>
     * vote_state contains the sums of all weighted votes for this proposal.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Tally vote_state = 10 [json_name = "voteState", (.gogoproto.nullable) = false];</code>
     * @return Whether the voteState field is set.
     */
    public fun hasVoteState(): kotlin.Boolean {
      return _builder.hasVoteState()
    }

    /**
     * <pre>
     * timeout is the timestamp of the block where the proposal execution times out. Header times of the votes and
     * execution messages must be before this end time to be included in the election. After the timeout timestamp the
     * proposal can not be executed anymore and should be considered pending delete.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timeout = 11 [json_name = "timeout", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public var timeout: com.google.protobuf.Timestamp
      @JvmName("getTimeout")
      get() = _builder.getTimeout()
      @JvmName("setTimeout")
      set(value) {
        _builder.setTimeout(value)
      }
    /**
     * <pre>
     * timeout is the timestamp of the block where the proposal execution times out. Header times of the votes and
     * execution messages must be before this end time to be included in the election. After the timeout timestamp the
     * proposal can not be executed anymore and should be considered pending delete.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timeout = 11 [json_name = "timeout", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     */
    public fun clearTimeout() {
      _builder.clearTimeout()
    }
    /**
     * <pre>
     * timeout is the timestamp of the block where the proposal execution times out. Header times of the votes and
     * execution messages must be before this end time to be included in the election. After the timeout timestamp the
     * proposal can not be executed anymore and should be considered pending delete.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp timeout = 11 [json_name = "timeout", (.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];</code>
     * @return Whether the timeout field is set.
     */
    public fun hasTimeout(): kotlin.Boolean {
      return _builder.hasTimeout()
    }

    /**
     * <pre>
     * executor_result is the final result based on the votes and election rule. Initial value is NotRun.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Proposal.ExecutorResult executor_result = 12 [json_name = "executorResult"];</code>
     */
    public var executorResult: cosmos.group.v1beta1.Types.Proposal.ExecutorResult
      @JvmName("getExecutorResult")
      get() = _builder.getExecutorResult()
      @JvmName("setExecutorResult")
      set(value) {
        _builder.setExecutorResult(value)
      }
    /**
     * <pre>
     * executor_result is the final result based on the votes and election rule. Initial value is NotRun.
     * </pre>
     *
     * <code>.cosmos.group.v1beta1.Proposal.ExecutorResult executor_result = 12 [json_name = "executorResult"];</code>
     */
    public fun clearExecutorResult() {
      _builder.clearExecutorResult()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class MsgsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * msgs is a list of Msgs that will be executed if the proposal passes.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
     */
     public val msgs: com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, MsgsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getMsgsList()
      )
    /**
     * <pre>
     * msgs is a list of Msgs that will be executed if the proposal passes.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
     * @param value The msgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addMsgs")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, MsgsProxy>.add(value: com.google.protobuf.Any) {
      _builder.addMsgs(value)
    }/**
     * <pre>
     * msgs is a list of Msgs that will be executed if the proposal passes.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
     * @param value The msgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignMsgs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, MsgsProxy>.plusAssign(value: com.google.protobuf.Any) {
      add(value)
    }/**
     * <pre>
     * msgs is a list of Msgs that will be executed if the proposal passes.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
     * @param values The msgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllMsgs")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, MsgsProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.Any>) {
      _builder.addAllMsgs(values)
    }/**
     * <pre>
     * msgs is a list of Msgs that will be executed if the proposal passes.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
     * @param values The msgs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllMsgs")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, MsgsProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.Any>) {
      addAll(values)
    }/**
     * <pre>
     * msgs is a list of Msgs that will be executed if the proposal passes.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
     * @param index The index to set the value at.
     * @param value The msgs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setMsgs")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, MsgsProxy>.set(index: kotlin.Int, value: com.google.protobuf.Any) {
      _builder.setMsgs(index, value)
    }/**
     * <pre>
     * msgs is a list of Msgs that will be executed if the proposal passes.
     * </pre>
     *
     * <code>repeated .google.protobuf.Any msgs = 13 [json_name = "msgs"];</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearMsgs")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.Any, MsgsProxy>.clear() {
      _builder.clearMsgs()
    }}
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.group.v1beta1.Types.Proposal.copy(block: cosmos.group.v1beta1.ProposalKt.Dsl.() -> kotlin.Unit): cosmos.group.v1beta1.Types.Proposal =
  cosmos.group.v1beta1.ProposalKt.Dsl._create(this.toBuilder()).apply { block() }._build()
