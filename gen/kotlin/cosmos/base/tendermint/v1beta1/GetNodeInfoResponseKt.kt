//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: cosmos/base/tendermint/v1beta1/query.proto

package cosmos.base.tendermint.v1beta1;

@kotlin.jvm.JvmSynthetic
public inline fun getNodeInfoResponse(block: cosmos.base.tendermint.v1beta1.GetNodeInfoResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse =
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponseKt.Dsl._create(cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.newBuilder()).apply { block() }._build()
public object GetNodeInfoResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse = _builder.build()

    /**
     * <code>.tendermint.p2p.NodeInfo node_info = 1 [json_name = "nodeInfo"];</code>
     */
    public var nodeInfo: tendermint.p2p.Types.NodeInfo
      @JvmName("getNodeInfo")
      get() = _builder.getNodeInfo()
      @JvmName("setNodeInfo")
      set(value) {
        _builder.setNodeInfo(value)
      }
    /**
     * <code>.tendermint.p2p.NodeInfo node_info = 1 [json_name = "nodeInfo"];</code>
     */
    public fun clearNodeInfo() {
      _builder.clearNodeInfo()
    }
    /**
     * <code>.tendermint.p2p.NodeInfo node_info = 1 [json_name = "nodeInfo"];</code>
     * @return Whether the nodeInfo field is set.
     */
    public fun hasNodeInfo(): kotlin.Boolean {
      return _builder.hasNodeInfo()
    }

    /**
     * <code>.cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];</code>
     */
    public var applicationVersion: cosmos.base.tendermint.v1beta1.Query.VersionInfo
      @JvmName("getApplicationVersion")
      get() = _builder.getApplicationVersion()
      @JvmName("setApplicationVersion")
      set(value) {
        _builder.setApplicationVersion(value)
      }
    /**
     * <code>.cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];</code>
     */
    public fun clearApplicationVersion() {
      _builder.clearApplicationVersion()
    }
    /**
     * <code>.cosmos.base.tendermint.v1beta1.VersionInfo application_version = 2 [json_name = "applicationVersion"];</code>
     * @return Whether the applicationVersion field is set.
     */
    public fun hasApplicationVersion(): kotlin.Boolean {
      return _builder.hasApplicationVersion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse.copy(block: cosmos.base.tendermint.v1beta1.GetNodeInfoResponseKt.Dsl.() -> kotlin.Unit): cosmos.base.tendermint.v1beta1.Query.GetNodeInfoResponse =
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()
